generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int         @id @default(autoincrement())
  username    String      @unique
  email       String      @unique
  password    String
  role        Role        @default(USER)
  restaurant  Restaurant? 
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

enum Role {
  USER
  ADMIN
  RESTAURANT_OWNER
}

model Restaurant {
  id            Int               @id @default(autoincrement())
  name          String
  location      String
  description   String?           @db.Text
  imageUrl      String?
  districtId    Int?
  userId        Int               @unique // Ресторан эзэмшигчийн ID
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  user          User              @relation(fields: [userId], references: [id])
  district      District?         @relation(fields: [districtId], references: [id])
  environment   Environment[]
  signatureDish SignatureDish[]
  tags          RestaurantTag[]
  menus         Menu[]
}

model District {
  id          Int          @id @default(autoincrement())
  name        String
  description String?      @db.Text
  restaurants Restaurant[]
}

model Environment {
  id            Int         @id @default(autoincrement())
  imageUrl      String
  description   String?     @db.Text
  restaurantId  Int
  restaurant    Restaurant  @relation(fields: [restaurantId], references: [id])
}

model Menu {
  id            Int          @id @default(autoincrement())
  name          String
  description   String?      @db.Text
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  restaurantId  Int
  restaurant    Restaurant   @relation(fields: [restaurantId], references: [id])
  menuItems     MenuItem[]
}

model MenuItem {
  id            Int         @id @default(autoincrement())
  name          String
  description   String?     @db.Text
  price         Float
  imageUrl      String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  menuId        Int
  menu          Menu        @relation(fields: [menuId], references: [id])
}

model SignatureDish {
  id            Int         @id @default(autoincrement())
  name          String
  description   String?     @db.Text
  imageUrl      String?
  restaurantId  Int
  restaurant    Restaurant  @relation(fields: [restaurantId], references: [id])
}

model Tag {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  description   String?         @db.Text
  restaurants   RestaurantTag[]
}

model RestaurantTag {
  restaurantId  Int
  tagId         Int
  restaurant    Restaurant      @relation(fields: [restaurantId], references: [id])
  tag           Tag             @relation(fields: [tagId], references: [id])

  @@id([restaurantId, tagId])
}